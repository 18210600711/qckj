<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qckj.dao.UserDao">
<insert id="addUserAuthentication" parameterType="UserAuthentication">
insert into user_authentication(id,username,password)
values(#{userAuthentication.id},#{userAuthentication.username},#{userAuthentication.password});
</insert>
<insert id="addUserBase" parameterType="UserBase">
insert into user_base(id,number,name,gender,birthday,age,major,class,phone,department,qqnumber,origin,other)
values(#{userBase.id},#{userBase.number},#{userBase.name},#{userBase.gender},#{userBase.birthday},#{userBase.age},
#{userBase.major},#{userBase.Classes},#{userBase.phone},#{userBase.department},#{userBase.qqnumber},#{userBase.origin},
#{userBase.other});
</insert>
<select id="getAllUser" resultType="UserBaseVo">
select au.id,au.username,au.password,
ub.number,ub.name,ub.gender,ub.birthday,ub.age,ub.major,ub.class Classes,
ub.phone,ub.department,ub.qqnumber,ub.origin,ub.other 
from user_authentication as au left join user_base as ub on au.id=ub.id;
</select>
<select id="checkUserByUserName" parameterType="String" resultType="Int">
select count(*) from user_authentication where username=#{username};
</select>
<select id="selectUserById" resultType="UserBaseVo" parameterType="String">
select au.id,au.username,au.password,
ub.number,ub.name,ub.gender,ub.birthday,ub.age,ub.major,ub.class Classes,
ub.phone,ub.department,ub.qqnumber,ub.origin,ub.other 
from user_authentication  au,user_base ub where au.id=#{id} and ub.id=#{id};
</select>

<update id="updateUserBase" parameterType="UserBaseVo">
update user_authentication ua, user_base ub set ua.username=#{username},
ub.number=#{number},ub.name=#{name},ub.gender=#{gender},ub.birthday=#{birthday},
ub.age=#{age},ub.major=#{major},ub.class=#{Classes},
ub.phone=#{phone},ub.department=#{department},ub.qqnumber=#{qqnumber},
ub.origin=#{origin},ub.other=#{other} where ua.id=#{id} and ub.id=#{id} ;

</update>
<delete id="deleteUserById" parameterType="String">
 delete from user_authentication where id=#{id};
</delete>
<select id="getAllName" resultType="String">
select name from user_base;
</select>

<select id="getIdByName"  resultType="String">
select id from user_base  <where>  
        name 
        <foreach  collection="name" item="name" open="in (" close=")" separator=",">  
        <if test="name !=null "> 
         #{name} 
    </if>  
            
        </foreach>  
    </where>  
</select>

<select id="getDetailedList" resultType="String">
select department from department;
</select>
<select id="getIdByUsernameAndPassword" parameterType="Map" resultType="String">
select id
from user_authentication where username=#{username} and password=#{password};
</select>
</mapper>